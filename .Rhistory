ggplot(df_18_80_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-80", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_18_80_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-80", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_18_80_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-80", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_18_80_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-80", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
# Histogram
ggplot(df_16_80_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-80", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_16_80_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-80", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_16_80_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-80", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_16_80_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-80", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
nrow = 4, ncol = 4
)
grid.arrange(
# Model 1
ggplot(model1_df, aes(x = vote, fill = age_range)) +
geom_density( color = "black", alpha = 0.7) +
labs(title = "Density Plot of Votes", x = "Vote", y = "Density") +
theme_minimal(),
# Model 2
ggplot(model2_df, aes(x = vote, fill = age_range)) +
geom_density( color = "black", alpha = 0.7) +
labs(title = "Density Plot of Votes", x = "Vote", y = "Density") +
theme_minimal(),
# Model 3
ggplot(model3_df, aes(x = vote, fill = age_range)) +
geom_density( color = "black", alpha = 0.7) +
labs(title = "Density Plot of Votes", x = "Vote", y = "Density") +
theme_minimal(),
nrow = 2, ncol = 2
)
# Round the vote variable to the nearest integer
model1_df$vote <- round(model1_df$vote)
# Convert age.category to a factor
model1_df$age_range <- as.factor(model1_df$age_range, levels = c(1, 2),
labels = c("18-100", "16-100"))
# Round the vote variable to the nearest integer
model1_df$vote <- round(model1_df$vote)
# Convert age.category to a factor
model1_df$age_range <- as.factor(model1_df$age_range)
# Fit a GLM where age.category predicts vote (count outcome)
model1 <- glm(vote ~ age_range, data = model1_df, family = poisson())
# Check the summary of the model
summary(model1)
pacman::p_load(AER)
dispersiontest(model1)
# Calculate the ratio of residual deviance to degrees of freedom
ratio1 <- model1$deviance / model1$df.residual
ratio1
# Load the MASS package
library(MASS)
# Fit the Negative Binomial regression model
nb_model1 <- glm.nb(vote ~ age_range, data = model1_df)
# Check the summary of the model
summary(nb_model1)
# Round the vote variable to the nearest integer
model2_df$vote <- round(model2_df$vote)
# Convert age.category to a factor
model2_df$age_range <- as.factor(model2_df$age_range)
# Fit a GLM where age.category predicts vote (count outcome)
model2 <- glm(vote ~ age_range, data = model2_df, family = poisson())
# Check the summary of the model
summary(model2)
dispersiontest(model2)
# Calculate the ratio of residual deviance to degrees of freedom
ratio2 <- model2$deviance / model2$df.residual
ratio2
# Load the MASS package
library(MASS)
# Fit the Negative Binomial regression model
nb_model2 <- glm.nb(vote ~ age_range, data = model2_df)
# Check the summary of the model
summary(nb_model2)
# Round the vote variable to the nearest integer
model3_df$vote <- round(model3_df$vote)
# Convert age.category to a factor
model3_df$age_range <- as.factor(model3_df$age_range)
# Fit a GLM where age.category predicts vote (count outcome)
model3 <- glm(vote ~ age_range, data = model3_df, family = poisson())
# Check the summary of the model
summary(model3)
dispersiontest(model3)
# Calculate the ratio of residual deviance to degrees of freedom
ratio3 <- model3$deviance / model3$df.residual
ratio3
# Load the MASS package
library(MASS)
# Fit the Negative Binomial regression model
nb_model3 <- glm.nb(vote ~ age_range, data = model3_df)
# Check the summary of the model
summary(nb_model3)
# Descriptive Statistics
summary(df_18_100_full$vote)
mean(df_18_100_full$vote)
sd(df_18_100_full$vote)
summary(df_16_100_full$vote)
mean(df_16_100_full$vote)
sd(df_16_100_full$vote)
summary(df_18_80_full$vote)
mean(df_18_80_full$vote)
sd(df_18_80_full$vote)
summary(df_16_80_full$vote)
mean(df_16_80_full$vote)
sd(df_16_80_full$vote)
grid.arrange(
# Histogram
ggplot(df_18_100_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_18_100_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_18_100_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_18_100_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
# Histogram
ggplot(df_16_100_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_16_100_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_16_100_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_16_100_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
# Histogram
ggplot(df_18_80_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-80", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_18_80_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-80", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_18_80_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-80", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_18_80_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-80", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
# Histogram
ggplot(df_16_80_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-80", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_16_80_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-80", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_16_80_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-80", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_16_80_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-80", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
nrow = 4, ncol = 4
)
grid.arrange(
# Histogram
ggplot(df_18_100_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_18_100_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_18_100_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_18_100_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
# Histogram
ggplot(df_16_100_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_16_100_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_16_100_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_16_100_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
nrow = 2, ncol = 4
)
grid.arrange(
# Histogram
ggplot(df_18_100_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_18_100_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_18_100_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_18_100_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
# Histogram
ggplot(df_16_100_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_16_100_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_16_100_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_16_100_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
nrow = 4, ncol = 2
)
grid.arrange(
# Histogram
ggplot(df_18_100_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_18_100_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_18_100_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_18_100_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
# Histogram
ggplot(df_16_100_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_16_100_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_16_100_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_16_100_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-100", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
nrow = 2, ncol = 4
)
grid.arrange(
# Histogram
ggplot(df_18_100_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_18_100_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_18_100_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_18_100_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
# Histogram
ggplot(df_18_80_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-80", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_18_80_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-80", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_18_80_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-80", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_18_80_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-80", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
nrow = 2, ncol = 4
)
grid.arrange(
# Histogram
ggplot(df_18_100_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_18_100_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_18_100_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_18_100_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 18-100", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
# Histogram
ggplot(df_16_80_full, aes(x = vote)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-80", x = "Vote", y = "Frequency") +
theme_minimal(),
# Box Plot
ggplot(df_16_80_full, aes(y = vote)) +
geom_boxplot(fill = "red", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-80", y = "Vote") +
theme_minimal(),
# Density Plot
ggplot(df_16_80_full, aes(x = vote)) +
geom_density(fill = "green4", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-80", x = "Vote", y = "Density") +
theme_minimal(),
# Violin Plot
ggplot(df_16_80_full, aes(x = factor(1), y = vote)) +
geom_violin(fill = "yellow", color = "black", alpha = 0.7) +
labs(title = "Age range: 16-80", x = "", y = "Vote") +
theme_minimal() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
nrow = 2, ncol = 4
)
grid.arrange(
ggplot(df_18_100_full, aes(x = vote, fill = factor(sim))) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, position = "dodge") +
labs(title = "Age 16-80", x = "Vote", y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = sim )) +
guides(fill = guide_legend(title = "Simulation")),
grid.arrange(
ggplot(df_18_100_full, aes(x = vote, fill = factor(sim))) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, position = "dodge") +
labs(title = "Age 16-80", x = "Vote", y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = sim ) +
guides(fill = guide_legend(title = "Simulation")),
ggplot(df_18_80_full, aes(x = vote, fill = factor(sim))) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, position = "dodge") +
labs(title = "Age 16-100", x = "Vote", y = "Frequency") +
theme_minimal() +
scale_fill_manual(values = sim) +
guides(fill = guide_legend(title = "Simulation")),
nrow = 1, ncol = 2
)
View(df_16_80_full)
grid.arrange(
ggplot(df_18_100_full, aes(x = vote, fill = factor(sim))) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, position = "dodge") +
labs(title = "Age 16-80", x = "Vote", y = "Frequency") +
theme_minimal() +
scale_fill_manual(name = sim ) +
guides(fill = guide_legend(title = "Simulation")),
ggplot(df_18_80_full, aes(x = vote, fill = factor(sim))) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, position = "dodge") +
labs(title = "Age 16-100", x = "Vote", y = "Frequency") +
theme_minimal() +
scale_fill_manual(name = sim) +
guides(fill = guide_legend(title = "Simulation")),
nrow = 1, ncol = 2
)
grid.arrange(
ggplot(df_18_100_full, aes(x = vote, fill = factor(sim))) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, position = "dodge") +
labs(title = "Age 16-80", x = "Vote", y = "Frequency") +
theme_minimal() +
scale_fill_manual(name = sim) +
guides(fill = guide_legend(title = "Simulation")),
ggplot(df_18_80_full, aes(x = vote, fill = factor(sim))) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, position = "dodge") +
labs(title = "Age 16-100", x = "Vote", y = "Frequency") +
theme_minimal() +
scale_fill_manual(name = sim) +
guides(fill = guide_legend(title = "Simulation")),
nrow = 1, ncol = 2
)
grid.arrange(
ggplot(df_18_100_full, aes(x = vote, fill = factor(sim))) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, position = "dodge") +
labs(title = "Age 16-80", x = "Vote", y = "Frequency") +
theme_minimal() +
guides(fill = guide_legend(title = "Simulation")),
ggplot(df_18_80_full, aes(x = vote, fill = factor(sim))) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, position = "dodge") +
labs(title = "Age 16-100", x = "Vote", y = "Frequency") +
theme_minimal() +
guides(fill = guide_legend(title = "Simulation")),
nrow = 1, ncol = 2
)
